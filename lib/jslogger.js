// Generated by CoffeeScript 1.6.2
(function() {
  var JSLogger, exports, http, querystring;

  querystring = require("querystring");

  http = require("http");

  JSLogger = (function() {
    JSLogger.prototype.host = "jslogger.com";

    JSLogger.prototype.port = 80;

    JSLogger.prototype.key = null;

    JSLogger.prototype.track = true;

    function JSLogger(options) {
      this.key = options.key || this.key;
      this.host = options.host || this.host;
      this.port = options.port || this.port;
      this.track = typeof options.track !== "undefined" ? options.track : this.track;
    }

    JSLogger.prototype.log = function(data) {
      return this.logDataByType("log", data);
    };

    JSLogger.prototype.event = function(data) {
      return this.logDataByType("event", data);
    };

    JSLogger.prototype.logDataByType = function(type, data) {
      var params, url;

      url = this.getUrl(type);
      params = this.serialize(data, "dump");
      return this.sendData(url, params);
    };

    JSLogger.prototype.getUrl = function(action) {
      return "/" + action;
    };

    JSLogger.prototype.serialize = function(obj, prefix) {
      var data;

      if (prefix == null) {
        prefix = "dump";
      }
      obj = typeof obj !== "string" ? JSON.stringify(obj) : obj;
      data = {};
      data.key = this.key;
      data[prefix] = obj;
      return querystring.stringify(data);
    };

    JSLogger.prototype.sendData = function(url, postData) {
      var postOptions, postReq;

      if (this.track) {
        postOptions = {
          host: this.host,
          port: this.port,
          path: url,
          method: "POST",
          headers: {
            "Content-Type": "application/x-www-form-urlencoded",
            "Content-Length": postData.length,
            "Referer": "app:" + this.key
          }
        };
        postReq = http.request(postOptions, function(res) {
          res.setEncoding("utf8");
          return res.on("data", function(chunk) {
            if (process.env.NODE_ENV !== "production") {
              return console.log("JSLogger response: " + chunk);
            }
          });
        });
        postReq.on("error", function(e) {
          return console.log("JSLogger problem with request: " + e.message);
        });
        postReq.write(postData);
        return postReq.end();
      }
    };

    return JSLogger;

  })();

  module.exports = exports = function(options) {
    return new JSLogger(options);
  };

}).call(this);
